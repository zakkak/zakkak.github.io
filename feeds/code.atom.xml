<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Foivos . Zakkak . net - Code</title><link href="http://foivos.zakkak.net/" rel="alternate"></link><link href="http://foivos.zakkak.net/feeds/code.atom.xml" rel="self"></link><id>http://foivos.zakkak.net/</id><updated>2013-04-01T02:34:00+03:00</updated><entry><title>A Sync/BackUp script</title><link href="http://foivos.zakkak.net/code/syncbackup_script.html" rel="alternate"></link><published>2013-04-01T02:34:00+03:00</published><updated>2013-04-01T02:34:00+03:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2013-04-01:/code/syncbackup_script.html</id><summary type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/45401b2c9009986913fb.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/bin/bash

#########################################################################
#                                                                       #
# File: backup_settings.sh                    A sync/backup script      #
#                                                                       #
#                                   ++++++++++++++++++++++++++++++      #
# Copyright (C) 2013                + Author:  Foivos S. Zakkak  +      #
#                                   + Website: foivos.zakkak.net +      #
#                                   + Email:   foivos@zakkak.net +      #
#                                   ++++++++++++++++++++++++++++++      #
#                                                                       #
# This program is free software: you can redistribute it and/or modify  #
# it under the terms of the GNU General Public License as published by  #
# the …&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/45401b2c9009986913fb.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/bin/bash

#########################################################################
#                                                                       #
# File: backup_settings.sh                    A sync/backup script      #
#                                                                       #
#                                   ++++++++++++++++++++++++++++++      #
# Copyright (C) 2013                + Author:  Foivos S. Zakkak  +      #
#                                   + Website: foivos.zakkak.net +      #
#                                   + Email:   foivos@zakkak.net +      #
#                                   ++++++++++++++++++++++++++++++      #
#                                                                       #
# This program is free software: you can redistribute it and/or modify  #
# it under the terms of the GNU General Public License as published by  #
# the Free Software Foundation, either version 3 of the License, or (at #
# your option) any later version.                                       #
#                                                                       #
# This program is distributed in the hope that it will be useful, but   #
# WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     #
# General Public License for more details.                              #
#                                                                       #
# You should have received a copy of the GNU General Public License     #
# along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;. #
#                                                                       #
#########################################################################

########################################################################
#                                                                      #
# This is a script to sync configuration files between two directories #
# (HOME and BACKUP_DIR)                                                #
#                                                                      #
# The files are first diffed and if they are not same the most recent  #
# overwrites the older one.                                            #
#                                                                      #
# Limitations: The script does not adapt to file deletions             #
#                                                                      #
########################################################################

IFS=$(echo -en "\n\b")
BACKUP_DIR=$HOME/"SparkleShare/settings"

mkdir -p $BACKUP_DIR
chmod 700 $BACKUP_DIR

FILES="
Documents/zakkak.vcf
.bash_aliases
.bash_profile
.zshrc
.indent.pro
.tmux.conf
.latexmkrc
.emacs
.emacs.el
.dircolors
.gitconfig
.gitignore
.mbsyncrc
.fonts.conf"

FOLDERS="
.config/htop
.fonts
bin"

CURR_DIR=$(pwd)
cd $HOME
for d in $FOLDERS
do
    for sd in `find $d -type f 2&gt; /dev/null`
    do
        FILES+="
${sd}" # DON'T indent this
    done
done

cd $CURR_DIR
cd $BACKUP_DIR
for d in $FOLDERS
do
    for sd in `find $d -type f 2&gt; /dev/null`
    do
        # if [[ ! "$FILES" =~ "$sd" ]] # This check is too expensive
        # then
            FILES+="
${sd}" # DON'T indent this
        # fi
    done
done

# Eliminate duplicates
IFS=
FILES=`echo -n $FILES | sort | uniq`
IFS=$(echo -en "\n\b")

cd $CURR_DIR
for f in $FILES
do
    LOCAL="$HOME/$f"
    BACKUP="$BACKUP_DIR/$f"
    diff $LOCAL $BACKUP 2&gt; /dev/null &gt; /dev/null
    RES=$?
    if [ $RES -ne 2 ] # If diff didn't fail (both files exist)
    then
        if [ $RES -eq 1 ] # if there are diffs between the files
        then
            # If local is newer than backup copy to backup else fetch
            # from backup
            if [ $LOCAL -nt $BACKUP ]
            then
                cp $LOCAL $BACKUP
                echo -e "\033[33;1m --&gt; \033[m" $f
            else
                cp $BACKUP $LOCAL
                echo -e "\033[31;1m &lt;-- \033[m" $f
            fi
        fi
    else
        if [ -f $LOCAL ]
        then
            DIR=${BACKUP%/*}
            if [ ! -d $DIR ]
            then
                mkdir -p $DIR
            fi
            cp $LOCAL $BACKUP
            echo -e "\033[33;1m --&gt; \033[m" $f
        elif [ -f $BACKUP ]
        then
            DIR=${LOCAL%/*}
            if [ ! -d $DIR ]
            then
                mkdir -p $DIR
            fi
            cp $BACKUP $LOCAL
            echo -e "\033[31;1m &lt;-- \033[m" $f
        else
            echo -e "\033[37;41;1mFile not found:\033[m" $f
        fi
    fi
done
&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;</content></entry><entry><title>svnKomp (using Kompare for svndiff)</title><link href="http://foivos.zakkak.net/code/svnkomp_using_kompare_svndiff.html" rel="alternate"></link><published>2012-10-14T00:07:00+03:00</published><updated>2012-10-14T00:07:00+03:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2012-10-14:/code/svnkomp_using_kompare_svndiff.html</id><summary type="html">&lt;p&gt;An extended version of this script can be found &lt;a href="https://github.com/zakkak/vcsdiff/blob/master/bin/vcsdiff"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/4e4466a2f9bdbdf79ae0.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

################################################################################
#                                                                              #
# File: svnkomp.rb                                                             #
#                                   ++++++++++++++++++++++++++++++             #
# Copyright (C) 2012                + Author:  Foivos S. Zakkak  +             #
#                                   + Website: foivos.zakkak.net +             #
#                                   + Email:   foivos@zakkak.net +             #
#                                   ++++++++++++++++++++++++++++++             #
#                                                                              #
# Based on the script svnvimdiff, written by                                   #
#   Geoff Buchan &lt;geoffrey.buchan@gmail.com&gt;                                   #
#                                                                              #
# This program is free software: you can redistribute it …&lt;/geoffrey.buchan@gmail.com&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;An extended version of this script can be found &lt;a href="https://github.com/zakkak/vcsdiff/blob/master/bin/vcsdiff"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/4e4466a2f9bdbdf79ae0.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

################################################################################
#                                                                              #
# File: svnkomp.rb                                                             #
#                                   ++++++++++++++++++++++++++++++             #
# Copyright (C) 2012                + Author:  Foivos S. Zakkak  +             #
#                                   + Website: foivos.zakkak.net +             #
#                                   + Email:   foivos@zakkak.net +             #
#                                   ++++++++++++++++++++++++++++++             #
#                                                                              #
# Based on the script svnvimdiff, written by                                   #
#   Geoff Buchan &lt;geoffrey.buchan@gmail.com&gt;                                   #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License as published by         #
# the Free Software Foundation, either version 3 of the License, or            #
# (at your option) any later version.                                          #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.        #
#                                                                              #
################################################################################

require 'optparse'
require 'ftools'

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = %'Usage: #{opts.program_name} [OPTIONS] -- [DIFF OPTIONS]'
  opts.separator ''
  opts.separator 'Options'

  options[:files] = Array.new
  opts.on('-f','--file FILE',Array,'Define the file/files you want to diff',
      '(you can use it more than once',
      'or seperate the filenames with commas)') do |f|
    options[:files]+=f
  end

  opts.separator ''
  opts.separator 'Diff options:'
  opts.separator 'All diff options are passed to svn diff'
  opts.separator ''
  opts.separator 'Common options:'

  opts.on_tail('-h','--help','Show this message') do
    puts option_parser
    exit 0;
  end
end

begin
  option_parser.parse!(ARGV)
rescue OptionParser::InvalidOption, OptionParser::MissingArgument
  puts option_parser
  exit 1;
end

# if the user didn't specify any arguments go through each file in the directory
if options[:files].length==0
  modified=%x[svn st 2&gt; /dev/null | grep -e "^[MU]" | awk '{print $2}']
  modified.split(%r[\n]).each do |f|
    options[:files].push(f) if File.file?(f)
  end
end

patch="/tmp/svnkomp_747_patch"
onsvn=""

options[:files].each do |f|
  onsvn="/tmp/"+f
  %x[cp #{f} #{onsvn}]
  %x[svn diff #{ARGV.join(" ")} #{f} &gt; #{patch}]
  if !($?.success?)
    exit 1;
  end
  %x[patch -R -p0 #{onsvn} #{patch}]
  %x[kompare #{onsvn} #{f}]
  File.delete(onsvn)
end

at_exit do
  %x[rm -rf #{onsvn} #{patch}]
end&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;</content></entry><entry><title>Text encoding converter (suitable for subtitles)</title><link href="http://foivos.zakkak.net/code/text_srt_converter.html" rel="alternate"></link><published>2012-10-13T17:37:00+03:00</published><updated>2012-10-13T17:37:00+03:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2012-10-13:/code/text_srt_converter.html</id><summary type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/c3af8c7346d932c9c907.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

################################################################################
#                                                                              #
# File: greek2utf8.rb                                                          #
#                                   ++++++++++++++++++++++++++++++             #
# Copyright (C) 2012                + Author:  Foivos S. Zakkak  +             #
#                                   + Website: foivos.zakkak.net +             #
#                                   + Email:   foivos@zakkak.net +             #
#                                   ++++++++++++++++++++++++++++++             #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License as published by         #
# the Free Software …&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/c3af8c7346d932c9c907.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

################################################################################
#                                                                              #
# File: greek2utf8.rb                                                          #
#                                   ++++++++++++++++++++++++++++++             #
# Copyright (C) 2012                + Author:  Foivos S. Zakkak  +             #
#                                   + Website: foivos.zakkak.net +             #
#                                   + Email:   foivos@zakkak.net +             #
#                                   ++++++++++++++++++++++++++++++             #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License as published by         #
# the Free Software Foundation, either version 3 of the License, or            #
# (at your option) any later version.                                          #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.        #
#                                                                              #
################################################################################

require 'optparse'
require 'iconv'

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = 'Greek encoding to utf-8 converter'
  opts.separator ''
  opts.separator %'Usage: #{opts.program_name} FILE [OPTIONS]'
  opts.separator ''
  opts.separator 'Options'

  opts.on('-o', '--outputfile FILE', 'File to write the output') do |v|
    options[:output] = v
  end


  avail_encs = %w[windows-1253 iso-8859-7]
  options[:enc] = 'windows-1253'
  opts.on('-e', '--encoding TYPE', avail_encs, 'Encoding of input file',
                  "(#{avail_encs.join(',')})",
                  'defaults to windows-1253') do |e|
    options[:enc] = e
  end

  opts.separator ''
  opts.separator 'Common options:'

  opts.on_tail('-h','--help','Show this message') do
    puts option_parser
    exit 0;
  end
end

begin
  option_parser.parse!(ARGV)
rescue OptionParser::InvalidOption, OptionParser::MissingArgument
  puts option_parser
  exit 1;
end

if ARGV.length == 0
  puts option_parser
  exit 1;
end

data = File.read(ARGV[0])

conv = Iconv.new('utf-8', options[:enc])
result = conv.iconv(data)

$stderr.puts %'The input file encoding is defined as #{options[:enc]}'

if options[:output]
  puts %'Output file = #{options[:output]}'
  File.open(options[:output], 'w') do |fp|
    fp.puts(result)
  end
else
  puts result
end&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;</content></entry><entry><title>Hello world</title><link href="http://foivos.zakkak.net/code/hello_world.html" rel="alternate"></link><published>2012-10-11T22:14:00+03:00</published><updated>2012-10-11T22:14:00+03:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2012-10-11:/code/hello_world.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>Hanoi Towers</title><link href="http://foivos.zakkak.net/code/hanoi_towers.html" rel="alternate"></link><published>2011-12-22T22:26:00+02:00</published><updated>2011-12-22T22:26:00+02:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2011-12-22:/code/hanoi_towers.html</id><summary type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/95b2b152f4172442f6cc.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;/******************************************************************************
 *                                                                            *
 * File: hanoi_towers.c                                                       *
 *                                                                            *
 * This program solves the Towers of Hanoi puzzle recursively                 *
 *                                                                            *
 * For details about that weird \033 staff visit                              *
 *  www.linuxdoc.org/HOWTO/Bash-Prompt-HOWTO/c327.html                        *
 *                                                                            *
 * Compile:                                                                   *
 *  gcc -lm hanoi.c -o hanoi                                                  *
 *                                                                            *
 * Copyright (C) 2011-2012  Foivos S. Zakkak                                  *
 *                                                                            *
 * This program is free software: you can redistribute it and …&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/95b2b152f4172442f6cc.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;/******************************************************************************
 *                                                                            *
 * File: hanoi_towers.c                                                       *
 *                                                                            *
 * This program solves the Towers of Hanoi puzzle recursively                 *
 *                                                                            *
 * For details about that weird \033 staff visit                              *
 *  www.linuxdoc.org/HOWTO/Bash-Prompt-HOWTO/c327.html                        *
 *                                                                            *
 * Compile:                                                                   *
 *  gcc -lm hanoi.c -o hanoi                                                  *
 *                                                                            *
 * Copyright (C) 2011-2012  Foivos S. Zakkak                                  *
 *                                                                            *
 * This program is free software: you can redistribute it and/or modify       *
 * it under the terms of the GNU General Public License as published by       *
 * the Free Software Foundation, either version 3 of the License, or          *
 * (at your option) any later version.                                        *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.      *
 *                                                                            *
 ******************************************************************************/

/* needed for usleep (see man usleep) */
#define _BSD_SOURCE

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;assert.h&gt;
#include &lt;unistd.h&gt;
#include &lt;math.h&gt;

/* Unomment to disable effects */
/* #define CS100 */
#ifndef CS100
#if defined(WIN32) || defined(WIN64)
#undef COLORED
#undef KEEPLOG
#else
#define COLORED
#define KEEPLOG
#endif
#define ANIMATED
#endif                          /*CS100 */

/* N will hold the number of disks */
int N, delay;

/* declare a structure for each column */
/* each column is actually a LIFO stack */
typedef struct column {
  int top;                      /* top holds the stack's top index */
  int *stack;                   /* stack is a dynamically allocated array which
                                   is used as the stack */
} column_t;

/* This function prints the board
 * won't work well for N&gt;9 */
void printBoard(column_t board[3])
{

  int i, j, k, n, num_of_digits, width, disk, mod, div;

  /* calculate the width of the largest disk and add some extra space */
  int maxwidth = (2 * (N - 1)) + 4;

  /* print the letters of the columns */
  for (i = 0; i &lt; 3; ++i) {
    for (k = 0; k &lt; (maxwidth / 2); ++k)
      printf(" ");

    printf("%c", 'A' + i);

    for (k = 0; k &lt; (maxwidth / 2); ++k)
      printf(" ");
  }
  printf("\n");
#ifdef KEEPLOG
  printf("\033[2K");
#endif                          /* KEEPLOG */
  printf("\n");


  /* print the first empty line for all three columns */
  for (i = 0; i &lt; 3; ++i) {
    for (k = 0; k &lt; (maxwidth / 2); ++k)
      printf(" ");

    printf("|");

    for (k = 0; k &lt; (maxwidth / 2); ++k)
      printf(" ");
  }
  printf("\n");

  /* now print the actual columns */
  for (i = N - 1; i &gt;= 0; --i) {        /* for each stack level */
    for (j = 0; j &lt; 3; ++j) {   /* for each column/stack */
      disk = board[j].stack[i];
      /* calculate the disk's width */
      width = (2 * (disk - 1)) + 1;

      if (disk) {            /* if there is a disk at this level of the stack */
        for (k = 0; k &lt; (((maxwidth - width) + 1) / 2); ++k)
          printf(" ");

        /* calculate the numbers width */
        n = disk;
        num_of_digits = 0;
        while (n &gt; 0) {
          n /= 10;
          ++num_of_digits;
        }

#ifdef COLORED
        /* change color */
        printf("\033[1;%dm", 31 + disk % 6);
#endif                          /* COLORED */
        div = width / num_of_digits;
        for (k = 0; k &lt; div; ++k)
          printf("%d", disk);

        mod = width % num_of_digits;
        /* if there are more digits to print */
        if (mod)
          printf("%d", disk / (int) pow(10, num_of_digits - mod));

#ifdef COLORED
        /* reset color */
        printf("\033[0m");
#endif                          /* COLORED */

        for (k = 0; k &lt; (((maxwidth - width) + 1) / 2); ++k)
          printf(" ");
      } else {              /* if there is no disk at this level of the stack */
        for (k = 0; k &lt; (maxwidth / 2); ++k)
          printf(" ");

        printf("|");

        for (k = 0; k &lt; (maxwidth / 2); ++k)
          printf(" ");

      }

    }
    printf("\n");
  }

  /* print the bottom line */
  for (i = 0; i &lt; (maxwidth + 1) * 3; ++i)
    printf("-");

  printf("\n");

#ifdef ANIMATED
  /* set the delay between the printings */
  usleep(delay);
#endif                          /* ANIMATED */
}

/* moves 'disk' from 'from' to 'to' in 'board' */
void move(column_t * board, int disk, int from, int to)
{

  /* remove the disk from the 'from' column */
  board[from].stack[--board[from].top] = 0;
  assert(board[from].top &gt;= 0);

  /* move the disk to the 'to' column */
  board[to].stack[board[to].top++] = disk;

#ifdef ANIMATED
  /* clear the terminal for animated solving */
#if defined(WIN32) || defined(WIN64)
  system("CLS");
#else
  /* there are many ways to do it
   * 1st call system call clear
   */
  /* system("clear");
   */
  /* 2nd do yourself what clear would do \033[H moves the cursor to the top left
   * of the terminal and \033[J clears it
   */
  /*printf("\033[H\033[J");
   */
  /* 3rd move your cursor X lines up and continue your printing from there
   * \033[A moves cursor up N lines
   */
#ifdef KEEPLOG
  printf("\033[%dA", N + 6);
#else
  printf("\033[%dA", N + 7);
#endif                          /* KEEPLOG */
#endif                          /* WIN32 || WIN64 */
#endif                          /* ANIMATED */

  /* print the move and then the board */
  printf("\n%c--&gt;%c\n", 'A' + from, 'A' + to);
#ifdef KEEPLOG
  printf("\033[2K");
#endif                          /* KEEPLOG */
  printf("\n");
  printBoard(board);

  return;
}

/* moves 'disk' number of disks from 'from' to 'to' in 'board' */
void hanoi(column_t * board, int disk, int from, int to)
{
  int tmp;

  /* if there are no disks to move return (end recursion) */
  if (disk-- == 0)
    return;

  /* calculate the column to use as temporary */
  tmp = 3 - (to + from);

  /* step 1:
   *   first move all the disks except the bottom one to the tmp column */
  hanoi(board, disk, from, tmp);
  /* step 2:
   *   now we can move the last disk to 'to' */
  move(board, disk, from, to);
  /* step 3:
   *   now move the previously moved (step 1) disks from the tmp column
   *   to 'to' */
  hanoi(board, disk, tmp, to);

  return;
}

int main(int argc, char **argv)
{

  int i;
  column_t board[3];

#ifndef CS100
  if (argc != 3)
#else
  if (argc != 2)
#endif                          /* CS100 */
  {
    printf("\
       Copyright (C) 2011-2012 Foivos S. Zakkak \n\
       This program comes with ABSOLUTELY NO WARRANTY.\n\
       This is free software, and you are welcome to redistribute it\n\
       under certain conditions.\n\n");
#ifndef CS100
    printf("\
       Usage:%s &lt;number of disks&gt; &lt;animation delay in ms&gt;\n\
       Example:%s 5 100\n", argv[0], argv[0]);
#else
    printf("\
       Usage:%s &lt;number of disks&gt;\n\
       Example:%s 5\n", argv[0], argv[0]);
#endif                          /* CS100 */
    return 1;
  }

  N = atoi(argv[1]);
#ifndef CS100
  delay = atoi(argv[2]) * 1000;

  if ((N * delay) &lt; 0) {
    printf("Please enter positive numbers!");
    return 1;
  }
#endif                          /* CS100 */

  board[0].top = N;
  board[0].stack = (int *) malloc(N * sizeof(int));

  /* initially place all disks at first column */
  for (i = 0; i &lt; N; ++i)
    board[0].stack[i] = N - i;

  for (i = 1; i &lt; 3; ++i) {
    board[i].top = 0;
    board[i].stack = (int *) malloc(N * sizeof(int));
  }

  printf("\n\n\n");
  printBoard(board);
  hanoi(board, N, 0, 2);

  /* free the allocated memory */
  for (i = 0; i &lt; 3; ++i)
    free(board[i].stack);

  return 0;
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/XqTgCpBWhS8?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content></entry><entry><title>Knights of the Round Table</title><link href="http://foivos.zakkak.net/code/knights_round_table.html" rel="alternate"></link><published>2011-12-22T22:23:00+02:00</published><updated>2011-12-22T22:23:00+02:00</updated><author><name>zakkak</name></author><id>tag:foivos.zakkak.net,2011-12-22:/code/knights_round_table.html</id><summary type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/8a327ddb7f5a773d57ac.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;/******************************************************************************
 *                                                                            *
 * File: round_knights.c                                                      *
 *                                                                            *
 * This program solves the knights of the round table math problem with some  *
 * bitwise logic                                                              *
 *                                                                            *
 * For details about the problem                                              *
 *  http://mathforum.org/library/drmath/view/55862.html                       *
 *                                                                            *
 * Copyright (C) 2011-2012        ++++++++++++++++++++++++++++++              *
 *                                + Author:  Foivos S. Zakkak  +              *
 *                                + Website: foivos.zakkak.net +              *
 *                                + Email:   foivos@zakkak.net +              *
 *                                ++++++++++++++++++++++++++++++              *
 *                                                                            *
 * This program is free …&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/8a327ddb7f5a773d57ac.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;/******************************************************************************
 *                                                                            *
 * File: round_knights.c                                                      *
 *                                                                            *
 * This program solves the knights of the round table math problem with some  *
 * bitwise logic                                                              *
 *                                                                            *
 * For details about the problem                                              *
 *  http://mathforum.org/library/drmath/view/55862.html                       *
 *                                                                            *
 * Copyright (C) 2011-2012        ++++++++++++++++++++++++++++++              *
 *                                + Author:  Foivos S. Zakkak  +              *
 *                                + Website: foivos.zakkak.net +              *
 *                                + Email:   foivos@zakkak.net +              *
 *                                ++++++++++++++++++++++++++++++              *
 *                                                                            *
 * This program is free software: you can redistribute it and/or modify       *
 * it under the terms of the GNU General Public License as published by       *
 * the Free Software Foundation, either version 3 of the License, or          *
 * (at your option) any later version.                                        *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.      *
 *                                                                            *
 ******************************************************************************/

 #include &lt;stdio.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;errno.h&gt;
 #include &lt;string.h&gt;

 int main(int argc, char **argv)
 {
   char *res = NULL;

   if (argc != 2) {
     printf("Usage: %s \n", argv[0]);
     return 1;
   }

   unsigned long long int n = strtoull(argv[1], &amp;res, 10);

   int msb = (sizeof(n) * 8) - __builtin_clzll(n);

   if (*res != '\0' || n == 0 || strstr(argv[1], "-")) {
     printf("ERROR: \"%s\" is not a correct input\n", argv[1]);
     return 1;
   } else if (errno) {
     printf("ERROR: %s\n", strerror(errno));
     return 1;
   } else {
     printf("%llu is the survivor\n", ((n ^ (1 &lt;&lt; (msb - 1))) &lt;&lt; 1) + 1);
     return 0;
   }
 }&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;</content></entry></feed>